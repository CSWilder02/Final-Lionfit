{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\2023\\\\Studies\\\\DV 200\\\\Term3\\\\LionFit\\\\lionfit\\\\lionfit\\\\src\\\\Pages\\\\productSingle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductSingle() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [card, setCard] = useState({});\n  const [isAddedToCart, setIsAddedToCart] = useState(false);\n\n  // Function to fetch product data based on 'id'\n  const fetchProductData = async productId => {\n    try {\n      // Replace this with your actual data fetching logic (e.g., API call)\n      const response = await fetch(`/api/products/${productId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch product data');\n      }\n      const data = await response.json();\n      return data; // Assuming data is an object with product information\n    } catch (error) {\n      console.error(error);\n      throw error; // Rethrow the error for handling\n    }\n  };\n\n  // Fetch product data when the component mounts\n  useEffect(() => {\n    // Fetch product data based on the 'id' parameter\n    fetchProductData(id).then(data => {\n      // Set the 'card' state with the fetched data\n      setCard(data);\n    }).catch(error => {\n      // Handle the error (e.g., show an error message)\n      console.error(error);\n    });\n  }, [id]);\n\n  // Function to handle adding the product to the cart\n  const handleAddToCart = () => {\n    // Get the existing cart from session storage or initialize it as an empty array\n    const existingCart = JSON.parse(sessionStorage.getItem(\"cart\")) || [];\n\n    // Check if the product is already in the cart\n    const isProductInCart = existingCart.some(item => item.id === id);\n    if (!isProductInCart) {\n      // If the product is not in the cart, add it\n      existingCart.push({\n        id,\n        ...card\n      });\n\n      // Update session storage with the updated cart\n      sessionStorage.setItem(\"cart\", JSON.stringify(existingCart));\n\n      // Set the state to indicate that the product has been added to the cart\n      setIsAddedToCart(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SinglePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container4\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"ProductSingle\",\n        src: card.imgSrc,\n        alt: card.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"TitleSingle\",\n          children: card.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"NikeAd\",\n          children: card.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"NikeDiscription\",\n          children: [\"Price: R \", card.sizes, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button9\",\n      onClick: handleAddToCart,\n      children: \"ADD TO CART\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/cart\",\n      className: \"button8\",\n      children: \"View Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductSingle, \"NIr4kgllG19J0jikD8955oIAIYc=\", false, function () {\n  return [useParams];\n});\n_c = ProductSingle;\nexport default ProductSingle;\nvar _c;\n$RefreshReg$(_c, \"ProductSingle\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","jsxDEV","_jsxDEV","ProductSingle","_s","id","card","setCard","isAddedToCart","setIsAddedToCart","fetchProductData","productId","response","fetch","ok","Error","data","json","error","console","then","catch","handleAddToCart","existingCart","JSON","parse","sessionStorage","getItem","isProductInCart","some","item","push","setItem","stringify","className","children","src","imgSrc","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","description","sizes","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/2023/Studies/DV 200/Term3/LionFit/lionfit/lionfit/src/Pages/productSingle.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nfunction ProductSingle() {\r\n  const { id } = useParams();\r\n  const [card, setCard] = useState({});\r\n  const [isAddedToCart, setIsAddedToCart] = useState(false);\r\n\r\n  // Function to fetch product data based on 'id'\r\n  const fetchProductData = async (productId) => {\r\n    try {\r\n      // Replace this with your actual data fetching logic (e.g., API call)\r\n      const response = await fetch(`/api/products/${productId}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch product data');\r\n      }\r\n      const data = await response.json();\r\n      return data; // Assuming data is an object with product information\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error; // Rethrow the error for handling\r\n    }\r\n  };\r\n\r\n  // Fetch product data when the component mounts\r\n  useEffect(() => {\r\n    // Fetch product data based on the 'id' parameter\r\n    fetchProductData(id)\r\n      .then((data) => {\r\n        // Set the 'card' state with the fetched data\r\n        setCard(data);\r\n      })\r\n      .catch((error) => {\r\n        // Handle the error (e.g., show an error message)\r\n        console.error(error);\r\n      });\r\n  }, [id]);\r\n\r\n  // Function to handle adding the product to the cart\r\n  const handleAddToCart = () => {\r\n    // Get the existing cart from session storage or initialize it as an empty array\r\n    const existingCart = JSON.parse(sessionStorage.getItem(\"cart\")) || [];\r\n\r\n    // Check if the product is already in the cart\r\n    const isProductInCart = existingCart.some((item) => item.id === id);\r\n\r\n    if (!isProductInCart) {\r\n      // If the product is not in the cart, add it\r\n      existingCart.push({ id, ...card });\r\n\r\n      // Update session storage with the updated cart\r\n      sessionStorage.setItem(\"cart\", JSON.stringify(existingCart));\r\n\r\n      // Set the state to indicate that the product has been added to the cart\r\n      setIsAddedToCart(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='SinglePage'>\r\n      <div className=\"container4\">\r\n        <img className='ProductSingle' src={card.imgSrc} alt={card.title} />\r\n        <div>\r\n          <h1 className='TitleSingle'>{card.title}</h1>\r\n          <p className='NikeAd'>{card.description}</p>\r\n          <p className='NikeDiscription'>\r\n            Price: R {card.sizes} <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <button className=\"button9\" onClick={handleAddToCart}>ADD TO CART</button>\r\n      <Link to=\"/cart\" className='button8'>View Cart</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductSingle;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}