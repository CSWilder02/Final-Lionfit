{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\2023\\\\Studies\\\\DV 200\\\\Term3\\\\LionFit\\\\lionfit\\\\lionfit\\\\src\\\\productSingle.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// Sample product data array\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cards1 = [{\n  title: \"Product 1\",\n  imgSrc: \"image1.jpg\",\n  description: \"Description of Product 1\",\n  sizes: [\"Small\", \"Medium\", \"Large\"]\n}, {\n  title: \"Product 2\",\n  imgSrc: \"image2.jpg\",\n  description: \"Description of Product 2\",\n  sizes: [\"Small\", \"Medium\"]\n}\n// Add more product objects as needed\n];\n\nfunction ProductSingle() {\n  _s();\n  const {\n    productIndex\n  } = useParams();\n\n  // Convert productIndex to a number (it comes as a string)\n  const index = parseInt(productIndex, 10);\n\n  // Retrieve the corresponding product based on the index\n  const product = cards1[index];\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Product not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this); // Handle product not found\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-product\",\n    style: {\n      backgroundColor: \"#E1E1E1\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: product.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: product.imgSrc,\n      alt: product.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: product.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sizes: \", product.sizes.join(\", \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductSingle, \"63aS9RB9YZnHL4i+zZgKAWiccb0=\", false, function () {\n  return [useParams];\n});\n_c = ProductSingle;\nexport default ProductSingle;\nvar _c;\n$RefreshReg$(_c, \"ProductSingle\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","cards1","title","imgSrc","description","sizes","ProductSingle","_s","productIndex","index","parseInt","product","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","backgroundColor","src","alt","join","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/2023/Studies/DV 200/Term3/LionFit/lionfit/lionfit/src/productSingle.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Sample product data array\r\nconst cards1 = [\r\n  {\r\n    title: \"Product 1\",\r\n    imgSrc: \"image1.jpg\",\r\n    description: \"Description of Product 1\",\r\n    sizes: [\"Small\", \"Medium\", \"Large\"],\r\n  },\r\n  {\r\n    title: \"Product 2\",\r\n    imgSrc: \"image2.jpg\",\r\n    description: \"Description of Product 2\",\r\n    sizes: [\"Small\", \"Medium\"],\r\n  },\r\n  // Add more product objects as needed\r\n];\r\n\r\nfunction ProductSingle() {\r\n  const { productIndex } = useParams();\r\n\r\n  // Convert productIndex to a number (it comes as a string)\r\n  const index = parseInt(productIndex, 10);\r\n\r\n  // Retrieve the corresponding product based on the index\r\n  const product = cards1[index];\r\n\r\n  if (!product) {\r\n    return <div>Product not found</div>; // Handle product not found\r\n  }\r\n\r\n  return (\r\n    <div className=\"single-product\" style={{ backgroundColor: \"#E1E1E1\" }}>\r\n      <h1>{product.title}</h1>\r\n      <img src={product.imgSrc} alt={product.title} />\r\n      <p>{product.description}</p>\r\n      <p>Sizes: {product.sizes.join(\", \")}</p>\r\n      {/* Add more product details as needed */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductSingle;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,CACb;EACEC,KAAK,EAAE,WAAW;EAClBC,MAAM,EAAE,YAAY;EACpBC,WAAW,EAAE,0BAA0B;EACvCC,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO;AACpC,CAAC,EACD;EACEH,KAAK,EAAE,WAAW;EAClBC,MAAM,EAAE,YAAY;EACpBC,WAAW,EAAE,0BAA0B;EACvCC,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ;AAC3B;AACA;AAAA,CACD;;AAED,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAa,CAAC,GAAGV,SAAS,CAAC,CAAC;;EAEpC;EACA,MAAMW,KAAK,GAAGC,QAAQ,CAACF,YAAY,EAAE,EAAE,CAAC;;EAExC;EACA,MAAMG,OAAO,GAAGV,MAAM,CAACQ,KAAK,CAAC;EAE7B,IAAI,CAACE,OAAO,EAAE;IACZ,oBAAOX,OAAA;MAAAY,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EACvC;;EAEA,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAP,QAAA,gBACpEZ,OAAA;MAAAY,QAAA,EAAKD,OAAO,CAACT;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBhB,OAAA;MAAKoB,GAAG,EAAET,OAAO,CAACR,MAAO;MAACkB,GAAG,EAAEV,OAAO,CAACT;IAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDhB,OAAA;MAAAY,QAAA,EAAID,OAAO,CAACP;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BhB,OAAA;MAAAY,QAAA,GAAG,SAAO,EAACD,OAAO,CAACN,KAAK,CAACiB,IAAI,CAAC,IAAI,CAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErC,CAAC;AAEV;AAACT,EAAA,CAtBQD,aAAa;EAAA,QACKR,SAAS;AAAA;AAAAyB,EAAA,GAD3BjB,aAAa;AAwBtB,eAAeA,aAAa;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}