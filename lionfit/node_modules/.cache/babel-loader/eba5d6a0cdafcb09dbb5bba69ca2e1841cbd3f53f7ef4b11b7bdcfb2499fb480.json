{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\2023\\\\Studies\\\\DV 200\\\\Term3\\\\LionFit\\\\lionfit\\\\lionfit\\\\src\\\\productSingle.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductSingle() {\n  _s();\n  // Retrieve the product ID from the URL params\n  const {\n    productId\n  } = useParams();\n  console.log(\"Product ID:\", productId);\n\n  // Fetch the product details based on the productId (you can implement this logic)\n\n  // Example product data (replace with actual product data fetching)\n  const product = {\n    _id: productId\n    // Other product details like title, description, sizes, etc.\n  };\n\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this); // Add loading state or error handling\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-product\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: product.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: product.imgSrc,\n      alt: product.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: product.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sizes: \", product.sizes.join(\", \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductSingle, \"QX76Lr8G00NVlyiWUU0JNEO3QJE=\", false, function () {\n  return [useParams];\n});\n_c = ProductSingle;\nexport default ProductSingle;\nvar _c;\n$RefreshReg$(_c, \"ProductSingle\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","ProductSingle","_s","productId","console","log","product","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","src","imgSrc","alt","description","sizes","join","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/2023/Studies/DV 200/Term3/LionFit/lionfit/lionfit/src/productSingle.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction ProductSingle() {\r\n  // Retrieve the product ID from the URL params\r\n  const { productId } = useParams();\r\n  console.log(\"Product ID:\", productId);\r\n\r\n  // Fetch the product details based on the productId (you can implement this logic)\r\n\r\n  // Example product data (replace with actual product data fetching)\r\n  const product = {\r\n    _id: productId,\r\n    // Other product details like title, description, sizes, etc.\r\n  };\r\n\r\n  if (!product) {\r\n    return <div>Loading...</div>; // Add loading state or error handling\r\n  }\r\n\r\n  return (\r\n    <div className=\"single-product\">\r\n      <h1>{product.title}</h1>\r\n      <img src={product.imgSrc} alt={product.title} />\r\n      <p>{product.description}</p>\r\n      <p>Sizes: {product.sizes.join(\", \")}</p>\r\n      {/* Add more product details as needed */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductSingle;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB;EACA,MAAM;IAAEC;EAAU,CAAC,GAAGL,SAAS,CAAC,CAAC;EACjCM,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,SAAS,CAAC;;EAErC;;EAEA;EACA,MAAMG,OAAO,GAAG;IACdC,GAAG,EAAEJ;IACL;EACF,CAAC;;EAED,IAAI,CAACG,OAAO,EAAE;IACZ,oBAAON,OAAA;MAAAQ,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;;EAEA,oBACEZ,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAL,QAAA,gBAC7BR,OAAA;MAAAQ,QAAA,EAAKF,OAAO,CAACQ;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBZ,OAAA;MAAKe,GAAG,EAAET,OAAO,CAACU,MAAO;MAACC,GAAG,EAAEX,OAAO,CAACQ;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDZ,OAAA;MAAAQ,QAAA,EAAIF,OAAO,CAACY;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BZ,OAAA;MAAAQ,QAAA,GAAG,SAAO,EAACF,OAAO,CAACa,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErC,CAAC;AAEV;AAACV,EAAA,CA1BQD,aAAa;EAAA,QAEEH,SAAS;AAAA;AAAAuB,EAAA,GAFxBpB,aAAa;AA4BtB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}